// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Court {
  id         Int          @id @default(autoincrement())
  name       String
  scoreboard Scoreboard[]
}

model Scoreboard {
  id        Int      @id @default(autoincrement())
  court     Court    @relation(fields: [courtId], references: [id])
  courtId   Int
  teamA     String
  teamB     String
  scoreA    Int
  scoreB    Int
  gamesA    Int      @default(0)
  gamesB    Int      @default(0)
  updatedAt DateTime @updatedAt
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  emailVerified DateTime?
  sessions      Session[]
  accounts      Account[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  user               User    @relation(fields: [userId], references: [id])
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  @@unique([provider, providerAccountId])
}
